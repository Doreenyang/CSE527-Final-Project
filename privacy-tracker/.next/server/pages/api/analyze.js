"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/analyze";
exports.ids = ["pages/api/analyze"];
exports.modules = {

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = require("axios");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("formidable");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("puppeteer");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fanalyze&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Canalyze.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fanalyze&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Canalyze.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_analyze_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\analyze.ts */ \"(api)/./pages/api/analyze.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_analyze_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_analyze_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/analyze\",\n        pathname: \"/api/analyze\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_analyze_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFuYWx5emUmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q2FuYWx5emUudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDcUQ7QUFDckQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLGtEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxrREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcml2YWN5LXRyYWNrZXIvPzdmMzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxhbmFseXplLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYW5hbHl6ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FuYWx5emVcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fanalyze&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Canalyze.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./analyze.js":
/*!********************!*\
  !*** ./analyze.js ***!
  \********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\r\n * Main analysis module\r\n * Coordinates website tracking and classification\r\n */ \nconst fs = (__webpack_require__(/*! fs */ \"fs\").promises);\nconst path = __webpack_require__(/*! path */ \"path\");\nconst { trackWebsite } = __webpack_require__(/*! ./tracker */ \"(api)/./tracker.js\");\n// 开发模式下的最大网站分析数量限制\nconst MAX_WEBSITES_TO_ANALYZE = 3;\n/**\r\n * Reads websites from a file\r\n * @param {string} filePath - Path to the websites.txt file\r\n * @returns {Promise<string[]>} - Array of website URLs\r\n */ async function readWebsites(filePath) {\n    try {\n        console.log(`读取网站列表文件: ${filePath}`);\n        const content = await fs.readFile(filePath, \"utf8\");\n        const websites = content.split(\"\\n\").map((line)=>line.trim()).filter((line)=>line && !line.startsWith(\"#\"));\n        console.log(`已读取 ${websites.length} 个网站`);\n        return websites;\n    } catch (error) {\n        console.error(`Error reading website file: ${error.message}`);\n        return [];\n    }\n}\n/**\r\n * Analyzes a single website\r\n * @param {string} url - URL to analyze\r\n * @returns {Promise<Object>} - Analysis results\r\n */ async function analyzeWebsite(url) {\n    console.log(`开始分析 ${url}...`);\n    try {\n        // Normalize URL (add https:// if missing)\n        if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n            url = \"https://\" + url;\n        }\n        // Track website behavior\n        const chain = await trackWebsite(url);\n        console.log(`${url} 行为跟踪完成，收集了 ${chain.nodes.length} 个观察结果`);\n        // Classify the behavior using GPT\n        console.log(`开始使用 GPT 对 ${url} 进行分类...`);\n        const classification = await chain.classify();\n        console.log(`${url} 分类完成: ${classification.category}`);\n        return {\n            url,\n            behaviorSummary: chain.getSummary(),\n            classification: classification.category,\n            reasoning: classification.reasoning,\n            timestamp: new Date().toISOString()\n        };\n    } catch (error) {\n        console.error(`Error analyzing ${url}: ${error.message}`);\n        return {\n            url,\n            error: error.message,\n            timestamp: new Date().toISOString()\n        };\n    }\n}\n/**\r\n * Analyzes multiple websites\r\n * @param {string[]} urls - Array of URLs to analyze\r\n * @returns {Promise<Object[]>} - Array of analysis results\r\n */ async function analyzeWebsites(urls) {\n    const results = [];\n    // 限制分析的网站数量\n    const sitesToAnalyze = urls.slice(0, MAX_WEBSITES_TO_ANALYZE);\n    if (sitesToAnalyze.length < urls.length) {\n        console.log(`注意: 为了开发测试，仅分析前 ${MAX_WEBSITES_TO_ANALYZE} 个网站`);\n    }\n    for (const url of sitesToAnalyze){\n        try {\n            const result = await analyzeWebsite(url);\n            results.push(result);\n        } catch (error) {\n            console.error(`分析 ${url} 时发生致命错误:`, error);\n            results.push({\n                url,\n                error: `致命错误: ${error.message}`,\n                timestamp: new Date().toISOString()\n            });\n        }\n    }\n    return results;\n}\n/**\r\n * Main function to run analysis from file\r\n * @param {string} filePath - Path to websites.txt file\r\n * @returns {Promise<Object[]>} - Analysis results\r\n */ async function analyzeFromFile(filePath) {\n    try {\n        const websites = await readWebsites(filePath);\n        console.log(`找到 ${websites.length} 个网站需要分析`);\n        if (websites.length === 0) {\n            console.warn(\"警告: 没有找到要分析的网站\");\n            return [];\n        }\n        return await analyzeWebsites(websites);\n    } catch (error) {\n        console.error(\"分析文件时发生错误:\", error);\n        throw error; // 向上传递错误以便 API 能够捕获\n    }\n}\n// Allow direct execution via command line\nif (__webpack_require__.c[__webpack_require__.s] === module) {\n    const filePath = process.argv[2] || path.join(__dirname, \"websites.txt\");\n    analyzeFromFile(filePath).then((results)=>{\n        console.log(JSON.stringify(results, null, 2));\n    }).catch((error)=>{\n        console.error(`Analysis failed: ${error.message}`);\n        process.exit(1);\n    });\n}\nmodule.exports = {\n    readWebsites,\n    analyzeWebsite,\n    analyzeWebsites,\n    analyzeFromFile\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./analyze.js\n");

/***/ }),

/***/ "(api)/./gptClassifier.js":
/*!**************************!*\
  !*** ./gptClassifier.js ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * GPT Classifier for NoT.js\r\n * Replaces the Random Forest classifier with OpenAI's GPT model\r\n */ \n(__webpack_require__(/*! dotenv */ \"dotenv\").config)();\nconst axios = __webpack_require__(/*! axios */ \"axios\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst fs = __webpack_require__(/*! fs */ \"fs\");\n// 确保 API 密钥已加载\nlet openaiApiKey = process.env.OPENAI_API_KEY;\n// 如果环境变量未加载，尝试直接从文件读取\nif (!openaiApiKey || openaiApiKey === \"your_openai_api_key_here\") {\n    try {\n        const envContent = fs.readFileSync(path.join(process.cwd(), \".env\"), \"utf-8\");\n        const match = envContent.match(/OPENAI_API_KEY=([^\\s\\r\\n]+)/);\n        if (match && match[1]) {\n            openaiApiKey = match[1];\n            console.log(\"API key loaded from file directly\");\n        }\n    } catch (err) {\n        console.error(\"Error reading .env file:\", err.message);\n    }\n}\n/**\r\n * 使用模拟分类，当无法访问 OpenAI API 时使用\r\n */ function mockClassify(behaviorText) {\n    console.log(\"使用模拟分类器 (无法连接OpenAI)\");\n    // 基于关键词的简单规则分类\n    const trackerKeywords = [\n        \"google-analytics\",\n        \"facebook\",\n        \"pixel\",\n        \"tracker\",\n        \"跟踪器\",\n        \"读取了 cookie\",\n        \"写入了 cookie\"\n    ];\n    const hasTrackers = trackerKeywords.some((keyword)=>behaviorText.toLowerCase().includes(keyword.toLowerCase()));\n    if (hasTrackers) {\n        return {\n            category: \"B\",\n            reasoning: \"模拟分类: B. 可疑行为 - 检测到部分跟踪器或Cookie读写行为\",\n            rawBehaviors: behaviorText\n        };\n    } else {\n        return {\n            category: \"C\",\n            reasoning: \"模拟分类: C. 安全行为 - 未检测到明显的跟踪行为\",\n            rawBehaviors: behaviorText\n        };\n    }\n}\n/**\r\n * Classifies privacy behavior using ChatGPT\r\n * @param {string} behaviorText - The text containing website behaviors to analyze\r\n * @returns {Object} Classification result with category and reasoning\r\n */ async function classifyWithGPT(behaviorText) {\n    try {\n        if (!openaiApiKey || openaiApiKey === \"your_openai_api_key_here\") {\n            console.warn(\"警告: OpenAI API 密钥未设置, 使用模拟分类\");\n            return mockClassify(behaviorText);\n        }\n        console.log(\"正在使用 OpenAI API 进行分类...\");\n        const prompt = `你是隐私安全分析专家。以下是某网站行为列表，请判断其是否涉及用户隐私泄露。\r\n\r\n【行为列表】\r\n${behaviorText}\r\n\r\n请选择：\r\nA. 明显隐私泄露\r\nB. 可疑行为\r\nC. 安全行为\r\n\r\n请返回分类（A/B/C）及一句理由。`;\n        const response = await axios.post(\"https://api.openai.com/v1/chat/completions\", {\n            model: \"gpt-3.5-turbo\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: \"你是一个擅长分析网站隐私安全问题的专家。你的回复应简洁明了，只包含分类结果和简短理由。\"\n                },\n                {\n                    role: \"user\",\n                    content: prompt\n                }\n            ],\n            temperature: 0.3,\n            max_tokens: 150\n        }, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${openaiApiKey}`\n            }\n        });\n        const result = response.data.choices[0].message.content.trim();\n        console.log(\"OpenAI 返回结果:\", result);\n        // Extract the classification (A/B/C) and reasoning\n        const classificationMatch = result.match(/^([ABC])[.\\s:]/i);\n        const category = classificationMatch ? classificationMatch[1].toUpperCase() : \"Undetermined\";\n        return {\n            category,\n            reasoning: result,\n            rawBehaviors: behaviorText\n        };\n    } catch (error) {\n        console.error(\"Error classifying with GPT:\", error.message);\n        // 当 OpenAI API 错误时使用模拟分类\n        console.log(\"切换到模拟分类\");\n        return mockClassify(behaviorText);\n    }\n}\nmodule.exports = {\n    classifyWithGPT\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./gptClassifier.js\n");

/***/ }),

/***/ "(api)/./not.js":
/*!****************!*\
  !*** ./not.js ***!
  \****************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * NoT.js - Network of Thoughts JavaScript implementation\r\n * This is a simplified version of NoT.js that implements ThoughtNode and ThoughtChain\r\n */ \nclass ThoughtNode {\n    constructor(type, content, metadata = {}){\n        this.type = type; // Type of the observation (e.g., 'request', 'cookie', 'script')\n        this.content = content; // Description of the observation\n        this.metadata = metadata; // Additional data about the observation\n        this.timestamp = Date.now();\n    }\n    toString() {\n        return `[${this.type}] ${this.content}`;\n    }\n}\nclass ThoughtChain {\n    constructor(name){\n        this.name = name;\n        this.nodes = [];\n    }\n    addNode(node) {\n        this.nodes.push(node);\n        return this;\n    }\n    // Original method (to be replaced)\n    // classify() {\n    //   return rf.predict(this.nodes);\n    // }\n    // New method using GPT as classifier\n    async classify() {\n        // This will be implemented to use GPT instead of Random Forest\n        const { classifyWithGPT } = __webpack_require__(/*! ./gptClassifier */ \"(api)/./gptClassifier.js\");\n        const text = this.nodes.map((n)=>`${n.toString()}`).join(\"\\n\");\n        return await classifyWithGPT(text);\n    }\n    // Get a formatted summary of all nodes\n    getSummary() {\n        return this.nodes.map((node, index)=>`${index + 1}. ${node.toString()}`).join(\"\\n\");\n    }\n}\nmodule.exports = {\n    ThoughtNode,\n    ThoughtChain\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7OztDQUdDO0FBRUQsTUFBTUE7SUFDSkMsWUFBWUMsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFdBQVcsQ0FBQyxDQUFDLENBQUU7UUFDeEMsSUFBSSxDQUFDRixJQUFJLEdBQUdBLE1BQVksZ0VBQWdFO1FBQ3hGLElBQUksQ0FBQ0MsT0FBTyxHQUFHQSxTQUFTLGlDQUFpQztRQUN6RCxJQUFJLENBQUNDLFFBQVEsR0FBR0EsVUFBVSx3Q0FBd0M7UUFDbEUsSUFBSSxDQUFDQyxTQUFTLEdBQUdDLEtBQUtDLEdBQUc7SUFDM0I7SUFFQUMsV0FBVztRQUNULE9BQU8sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDTixJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQ0MsT0FBTyxDQUFDLENBQUM7SUFDekM7QUFDRjtBQUVBLE1BQU1NO0lBQ0pSLFlBQVlTLElBQUksQ0FBRTtRQUNoQixJQUFJLENBQUNBLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLEtBQUssR0FBRyxFQUFFO0lBQ2pCO0lBRUFDLFFBQVFDLElBQUksRUFBRTtRQUNaLElBQUksQ0FBQ0YsS0FBSyxDQUFDRyxJQUFJLENBQUNEO1FBQ2hCLE9BQU8sSUFBSTtJQUNiO0lBRUEsbUNBQW1DO0lBQ25DLGVBQWU7SUFDZixtQ0FBbUM7SUFDbkMsSUFBSTtJQUVKLHFDQUFxQztJQUNyQyxNQUFNRSxXQUFXO1FBQ2YsK0RBQStEO1FBQy9ELE1BQU0sRUFBRUMsZUFBZSxFQUFFLEdBQUdDLG1CQUFPQSxDQUFDO1FBQ3BDLE1BQU1DLE9BQU8sSUFBSSxDQUFDUCxLQUFLLENBQUNRLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBSyxDQUFDLEVBQUVBLEVBQUVaLFFBQVEsR0FBRyxDQUFDLEVBQUVhLElBQUksQ0FBQztRQUN6RCxPQUFPLE1BQU1MLGdCQUFnQkU7SUFDL0I7SUFFQSx1Q0FBdUM7SUFDdkNJLGFBQWE7UUFDWCxPQUFPLElBQUksQ0FBQ1gsS0FBSyxDQUFDUSxHQUFHLENBQUMsQ0FBQ04sTUFBTVUsUUFDM0IsQ0FBQyxFQUFFQSxRQUFRLEVBQUUsRUFBRSxFQUFFVixLQUFLTCxRQUFRLEdBQUcsQ0FBQyxFQUNsQ2EsSUFBSSxDQUFDO0lBQ1Q7QUFDRjtBQUVBRyxPQUFPQyxPQUFPLEdBQUc7SUFDZnpCO0lBQ0FTO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcml2YWN5LXRyYWNrZXIvLi9ub3QuanM/OGYwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTm9ULmpzIC0gTmV0d29yayBvZiBUaG91Z2h0cyBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uXHJcbiAqIFRoaXMgaXMgYSBzaW1wbGlmaWVkIHZlcnNpb24gb2YgTm9ULmpzIHRoYXQgaW1wbGVtZW50cyBUaG91Z2h0Tm9kZSBhbmQgVGhvdWdodENoYWluXHJcbiAqL1xyXG5cclxuY2xhc3MgVGhvdWdodE5vZGUge1xyXG4gIGNvbnN0cnVjdG9yKHR5cGUsIGNvbnRlbnQsIG1ldGFkYXRhID0ge30pIHtcclxuICAgIHRoaXMudHlwZSA9IHR5cGU7ICAgICAgIC8vIFR5cGUgb2YgdGhlIG9ic2VydmF0aW9uIChlLmcuLCAncmVxdWVzdCcsICdjb29raWUnLCAnc2NyaXB0JylcclxuICAgIHRoaXMuY29udGVudCA9IGNvbnRlbnQ7IC8vIERlc2NyaXB0aW9uIG9mIHRoZSBvYnNlcnZhdGlvblxyXG4gICAgdGhpcy5tZXRhZGF0YSA9IG1ldGFkYXRhOyAvLyBBZGRpdGlvbmFsIGRhdGEgYWJvdXQgdGhlIG9ic2VydmF0aW9uXHJcbiAgICB0aGlzLnRpbWVzdGFtcCA9IERhdGUubm93KCk7XHJcbiAgfVxyXG5cclxuICB0b1N0cmluZygpIHtcclxuICAgIHJldHVybiBgWyR7dGhpcy50eXBlfV0gJHt0aGlzLmNvbnRlbnR9YDtcclxuICB9XHJcbn1cclxuXHJcbmNsYXNzIFRob3VnaHRDaGFpbiB7XHJcbiAgY29uc3RydWN0b3IobmFtZSkge1xyXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgIHRoaXMubm9kZXMgPSBbXTtcclxuICB9XHJcblxyXG4gIGFkZE5vZGUobm9kZSkge1xyXG4gICAgdGhpcy5ub2Rlcy5wdXNoKG5vZGUpO1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICAvLyBPcmlnaW5hbCBtZXRob2QgKHRvIGJlIHJlcGxhY2VkKVxyXG4gIC8vIGNsYXNzaWZ5KCkge1xyXG4gIC8vICAgcmV0dXJuIHJmLnByZWRpY3QodGhpcy5ub2Rlcyk7XHJcbiAgLy8gfVxyXG5cclxuICAvLyBOZXcgbWV0aG9kIHVzaW5nIEdQVCBhcyBjbGFzc2lmaWVyXHJcbiAgYXN5bmMgY2xhc3NpZnkoKSB7XHJcbiAgICAvLyBUaGlzIHdpbGwgYmUgaW1wbGVtZW50ZWQgdG8gdXNlIEdQVCBpbnN0ZWFkIG9mIFJhbmRvbSBGb3Jlc3RcclxuICAgIGNvbnN0IHsgY2xhc3NpZnlXaXRoR1BUIH0gPSByZXF1aXJlKCcuL2dwdENsYXNzaWZpZXInKTtcclxuICAgIGNvbnN0IHRleHQgPSB0aGlzLm5vZGVzLm1hcChuID0+IGAke24udG9TdHJpbmcoKX1gKS5qb2luKCdcXG4nKTtcclxuICAgIHJldHVybiBhd2FpdCBjbGFzc2lmeVdpdGhHUFQodGV4dCk7XHJcbiAgfVxyXG5cclxuICAvLyBHZXQgYSBmb3JtYXR0ZWQgc3VtbWFyeSBvZiBhbGwgbm9kZXNcclxuICBnZXRTdW1tYXJ5KCkge1xyXG4gICAgcmV0dXJuIHRoaXMubm9kZXMubWFwKChub2RlLCBpbmRleCkgPT4gXHJcbiAgICAgIGAke2luZGV4ICsgMX0uICR7bm9kZS50b1N0cmluZygpfWBcclxuICAgICkuam9pbignXFxuJyk7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBUaG91Z2h0Tm9kZSxcclxuICBUaG91Z2h0Q2hhaW5cclxufTsgIl0sIm5hbWVzIjpbIlRob3VnaHROb2RlIiwiY29uc3RydWN0b3IiLCJ0eXBlIiwiY29udGVudCIsIm1ldGFkYXRhIiwidGltZXN0YW1wIiwiRGF0ZSIsIm5vdyIsInRvU3RyaW5nIiwiVGhvdWdodENoYWluIiwibmFtZSIsIm5vZGVzIiwiYWRkTm9kZSIsIm5vZGUiLCJwdXNoIiwiY2xhc3NpZnkiLCJjbGFzc2lmeVdpdGhHUFQiLCJyZXF1aXJlIiwidGV4dCIsIm1hcCIsIm4iLCJqb2luIiwiZ2V0U3VtbWFyeSIsImluZGV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./not.js\n");

/***/ }),

/***/ "(api)/./pages/api/analyze.ts":
/*!******************************!*\
  !*** ./pages/api/analyze.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(formidable__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _analyze__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../analyze */ \"(api)/./analyze.js\");\n/* harmony import */ var _analyze__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_analyze__WEBPACK_IMPORTED_MODULE_3__);\n/**\r\n * API endpoint for website privacy analysis\r\n */ \n\n// 修改导入方式，导入正确的类型和函数\n\n// 导入 TypeScript 版本的 analyzeFromFile\n\n// Disable the default body parser to handle form data\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\n/**\r\n * Parse form data from the request\r\n */ function parseForm(req) {\n    return new Promise((resolve, reject)=>{\n        // 使用 formidable v2.x 的方式创建 form 对象\n        const form = new formidable__WEBPACK_IMPORTED_MODULE_2__.IncomingForm({\n            keepExtensions: true,\n            maxFileSize: 10 * 1024 * 1024\n        });\n        form.parse(req, (err, fields, files)=>{\n            if (err) return reject(err);\n            resolve({\n                fields,\n                files\n            });\n        });\n    });\n}\n/**\r\n * Handle the website analysis request\r\n */ async function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        console.log(\"API start: 正在处理分析请求...\");\n        // Parse the form data\n        const { files } = await parseForm(req);\n        console.log(\"文件解析完成\", files ? \"文件存在\" : \"文件不存在\");\n        // 在 formidable v2 中，files[fieldname] 是单个文件对象或对象数组\n        const websitesFile = files.websites;\n        console.log(\"网站文件类型:\", typeof websitesFile, Array.isArray(websitesFile));\n        // 更详细的调试信息\n        if (websitesFile) {\n            console.log(\"文件对象结构:\", JSON.stringify(websitesFile, null, 2).substring(0, 200) + \"...\");\n        }\n        // 适配 formidable v2 的文件对象结构\n        let filePath;\n        // 处理文件对象可能的不同结构\n        if (Array.isArray(websitesFile)) {\n            // 如果是数组（多文件）\n            if (websitesFile.length === 0) {\n                return res.status(400).json({\n                    error: \"No websites file provided (empty array)\"\n                });\n            }\n            filePath = websitesFile[0].filepath;\n        } else if (websitesFile && typeof websitesFile === \"object\" && \"filepath\" in websitesFile) {\n            // 如果是单个文件对象\n            filePath = websitesFile.filepath;\n        } else {\n            console.error(\"无效的文件对象:\", websitesFile);\n            return res.status(400).json({\n                error: \"No valid websites file provided\"\n            });\n        }\n        console.log(\"网站文件路径:\", filePath);\n        // Save the file temporarily\n        const tempFilePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"temp_websites.txt\");\n        await fs__WEBPACK_IMPORTED_MODULE_0__.promises.copyFile(filePath, tempFilePath);\n        console.log(\"临时文件已创建:\", tempFilePath);\n        try {\n            // 读取临时文件内容进行验证\n            const fileContent = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(tempFilePath, \"utf-8\");\n            console.log(\"文件内容预览:\", fileContent.slice(0, 100) + \"...\");\n            // Analyze the websites\n            console.log(\"开始分析网站...\");\n            const results = await (0,_analyze__WEBPACK_IMPORTED_MODULE_3__.analyzeFromFile)(tempFilePath);\n            console.log(\"分析完成，结果数量:\", Array.isArray(results) ? results.length : \"非数组\");\n            // Clean up the temporary file\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.unlink(tempFilePath);\n            console.log(\"临时文件已删除\");\n            // Return the results\n            return res.status(200).json({\n                results\n            });\n        } catch (innerError) {\n            console.error(\"分析过程内部错误:\", innerError);\n            throw innerError;\n        }\n    } catch (error) {\n        console.error(\"API error:\", error);\n        console.error(\"错误详情:\", error instanceof Error ? error.stack : String(error));\n        return res.status(500).json({\n            error: \"Analysis failed\",\n            details: error instanceof Error ? error.message : String(error),\n            stack: error instanceof Error ? error.stack : undefined\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/analyze.ts\n");

/***/ }),

/***/ "(api)/./tracker.js":
/*!********************!*\
  !*** ./tracker.js ***!
  \********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * Website Tracker Module\r\n * Uses Puppeteer to track website behaviors related to privacy\r\n */ \nlet puppeteer;\ntry {\n    puppeteer = __webpack_require__(/*! puppeteer */ \"puppeteer\");\n} catch (err) {\n    console.error(\"Puppeteer 加载失败:\", err.message);\n}\nconst { ThoughtNode, ThoughtChain } = __webpack_require__(/*! ./not */ \"(api)/./not.js\");\n/**\r\n * 简化版的网站跟踪，当 Puppeteer 无法正常工作时使用\r\n */ async function simplifiedTrack(url) {\n    console.log(\"使用简化版跟踪功能 (Puppeteer可能不可用)\");\n    const chain = new ThoughtChain(url);\n    // 添加模拟的行为节点\n    chain.addNode(new ThoughtNode(\"navigation\", `访问网站 ${url}`, {\n        url\n    }));\n    chain.addNode(new ThoughtNode(\"request\", `模拟: 页面可能请求了跟踪器`, {\n        url: url + \"/tracking\"\n    }));\n    chain.addNode(new ThoughtNode(\"cookie\", \"模拟: 脚本可能读取了 document.cookie\", {\n        action: \"read\"\n    }));\n    // 根据网站域名添加一些特定的行为\n    if (url.includes(\"google\")) {\n        chain.addNode(new ThoughtNode(\"script\", \"模拟: 页面加载了 Google Analytics\", {\n            url: \"https://www.google-analytics.com/analytics.js\"\n        }));\n    } else if (url.includes(\"facebook\")) {\n        chain.addNode(new ThoughtNode(\"script\", \"模拟: 页面加载了 Facebook Pixel 或 SDK\", {\n            url: \"https://connect.facebook.net/signals/config/\"\n        }));\n    } else if (url.includes(\"news\") || url.includes(\"blog\")) {\n        chain.addNode(new ThoughtNode(\"script\", \"模拟: 页面加载了广告跟踪器\", {\n            url: \"https://ads-tracking.com\"\n        }));\n    }\n    chain.addNode(new ThoughtNode(\"storage\", \"模拟: 网站可能使用 localStorage 存储数据\", {\n        type: \"localStorage\",\n        itemCount: 5\n    }));\n    return chain;\n}\n/**\r\n * Track a single website and collect privacy-related behaviors\r\n * @param {string} url - URL of the website to track\r\n * @returns {Promise<ThoughtChain>} - Chain of observed behaviors\r\n */ async function trackWebsite(url) {\n    // 如果 Puppeteer 不可用，使用简化版跟踪\n    if (!puppeteer) {\n        console.warn(\"Puppeteer 不可用，使用简化版跟踪功能\");\n        return simplifiedTrack(url);\n    }\n    console.log(`开始跟踪网站: ${url}`);\n    const chain = new ThoughtChain(url);\n    let browser;\n    try {\n        browser = await puppeteer.launch({\n            headless: true,\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-dev-shm-usage\",\n                \"--disable-accelerated-2d-canvas\",\n                \"--disable-gpu\"\n            ]\n        });\n        const page = await browser.newPage();\n        // Track network requests\n        page.on(\"request\", (request)=>{\n            const url = request.url();\n            // Filter for tracking and analytics requests\n            const trackerPatterns = [\n                /google-analytics/i,\n                /facebook/i,\n                /fb\\.com/i,\n                /doubleclick/i,\n                /tracking/i,\n                /analytics/i,\n                /pixel/i,\n                /tracker/i,\n                /beacon/i,\n                /collect/i,\n                /telemetry/i\n            ];\n            if (trackerPatterns.some((pattern)=>pattern.test(url))) {\n                chain.addNode(new ThoughtNode(\"request\", `页面请求了跟踪器 ${url}`, {\n                    url\n                }));\n            }\n        });\n        // Track cookies\n        const cookieAccessDetectionScript = `\r\n      (function() {\r\n        const originalDocumentCookie = Object.getOwnPropertyDescriptor(Document.prototype, 'cookie');\r\n        \r\n        Object.defineProperty(document, 'cookie', {\r\n          get: function() {\r\n            window.cookieRead = true;\r\n            return originalDocumentCookie.get.call(this);\r\n          },\r\n          set: function(val) {\r\n            window.cookieWritten = true;\r\n            return originalDocumentCookie.set.call(this, val);\r\n          }\r\n        });\r\n      })();\r\n    `;\n        await page.evaluateOnNewDocument(cookieAccessDetectionScript);\n        // Navigate to the URL\n        chain.addNode(new ThoughtNode(\"navigation\", `访问网站 ${url}`, {\n            url\n        }));\n        console.log(`正在访问 ${url}...`);\n        try {\n            await page.goto(url, {\n                waitUntil: \"networkidle2\",\n                timeout: 30000\n            });\n        } catch (navError) {\n            console.warn(`导航到 ${url} 时超时或错误: ${navError.message}`);\n            // 即使导航失败也继续检测\n            chain.addNode(new ThoughtNode(\"error\", `导航到网站失败: ${navError.message}`, {\n                error: true\n            }));\n        }\n        // Wait a bit more for any deferred scripts\n        await new Promise((resolve)=>setTimeout(resolve, 5000));\n        // Check for cookie access\n        const cookieActivity = await page.evaluate(()=>{\n            return {\n                cookieRead: window.cookieRead || false,\n                cookieWritten: window.cookieWritten || false\n            };\n        });\n        if (cookieActivity.cookieRead) {\n            chain.addNode(new ThoughtNode(\"cookie\", \"脚本读取了 document.cookie\", {\n                action: \"read\"\n            }));\n        }\n        if (cookieActivity.cookieWritten) {\n            chain.addNode(new ThoughtNode(\"cookie\", \"脚本写入了 document.cookie\", {\n                action: \"write\"\n            }));\n        }\n        // Check for localStorage and sessionStorage access\n        const storageActivity = await page.evaluate(()=>{\n            // Override Storage prototype methods to detect usage\n            let localStorageAccessed = false;\n            let sessionStorageAccessed = false;\n            // Check for existing values\n            const localStorageItems = Object.keys(localStorage).length;\n            const sessionStorageItems = Object.keys(sessionStorage).length;\n            return {\n                localStorageItems,\n                sessionStorageItems\n            };\n        });\n        if (storageActivity.localStorageItems > 0) {\n            chain.addNode(new ThoughtNode(\"storage\", `网站使用 localStorage 存储了 ${storageActivity.localStorageItems} 项数据`, {\n                type: \"localStorage\",\n                itemCount: storageActivity.localStorageItems\n            }));\n        }\n        if (storageActivity.sessionStorageItems > 0) {\n            chain.addNode(new ThoughtNode(\"storage\", `网站使用 sessionStorage 存储了 ${storageActivity.sessionStorageItems} 项数据`, {\n                type: \"sessionStorage\",\n                itemCount: storageActivity.sessionStorageItems\n            }));\n        }\n        // Detect third-party scripts\n        const thirdPartyScripts = await page.evaluate(()=>{\n            return Array.from(document.getElementsByTagName(\"script\")).filter((script)=>script.src).map((script)=>script.src);\n        });\n        const knownTrackers = {\n            \"facebook\": \"Facebook Pixel 或 SDK\",\n            \"google-analytics\": \"Google Analytics\",\n            \"gtag\": \"Google Tag Manager\",\n            \"google-tag\": \"Google Tag Manager\",\n            \"doubleclick\": \"DoubleClick (Google广告)\",\n            \"tiktok\": \"TikTok Pixel\",\n            \"twitter\": \"Twitter Pixel\",\n            \"amplitude\": \"Amplitude Analytics\",\n            \"hotjar\": \"Hotjar\",\n            \"segment\": \"Segment\",\n            \"mixpanel\": \"Mixpanel\"\n        };\n        thirdPartyScripts.forEach((scriptUrl)=>{\n            for (const [key, name] of Object.entries(knownTrackers)){\n                if (scriptUrl.includes(key)) {\n                    chain.addNode(new ThoughtNode(\"script\", `页面加载了 ${name}`, {\n                        url: scriptUrl\n                    }));\n                    break;\n                }\n            }\n        });\n        // Check for fingerprinting techniques\n        const fingerprintingMethods = await page.evaluate(()=>{\n            const methods = [];\n            // Check canvas fingerprinting\n            if (document.createElement(\"canvas\").getContext) {\n                methods.push(\"canvas\");\n            }\n            // Check WebRTC\n            if (window.RTCPeerConnection) {\n                methods.push(\"webrtc\");\n            }\n            // Check device enumeration\n            if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n                methods.push(\"mediaDevices\");\n            }\n            return methods;\n        });\n        if (fingerprintingMethods.includes(\"canvas\")) {\n            chain.addNode(new ThoughtNode(\"fingerprinting\", \"网站使用 Canvas API 可能进行指纹识别\", {\n                method: \"canvas\"\n            }));\n        }\n        if (fingerprintingMethods.includes(\"webrtc\")) {\n            chain.addNode(new ThoughtNode(\"fingerprinting\", \"网站使用 WebRTC API 可能获取本地IP地址\", {\n                method: \"webrtc\"\n            }));\n        }\n        return chain;\n    } catch (error) {\n        console.error(`跟踪网站时出错: ${error.message}`);\n        // 即使出错，也返回一个带有错误信息的链\n        chain.addNode(new ThoughtNode(\"error\", `跟踪过程出错: ${error.message}`, {\n            error: true\n        }));\n        // 在出错时使用简化版跟踪来提供一些基本数据\n        if (chain.nodes.length < 2) {\n            console.log(\"使用简化版跟踪作为备用\");\n            return simplifiedTrack(url);\n        }\n        return chain;\n    } finally{\n        if (browser) {\n            await browser.close().catch((err)=>console.warn(\"关闭浏览器时出错:\", err.message));\n        }\n    }\n}\nmodule.exports = {\n    trackWebsite\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./tracker.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fanalyze&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Canalyze.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();